
// traverse through array element and count the frequencies
let arr = [1,3,2,1,1,2,3]
let visited = false
//  for(let i = 0; i<arr.length; i++){      
//    //  if(visited[i] == true) {continue}
//      let count = 1;
//     for(let j = i+1 ; j<arr.length; j++){
//          if(arr[i] == arr[j]){
//           //  visited[i] = true
//             count++;
//          }
//        }
//         console.log(arr[i] +" "+count )
//  }

 // this program will take order of n square time 





//now we will discuss optimised verion wich will take order of n time 


   let frequencyCounter1 = {}

   for(let val of arr){
        if(frequencyCounter1[val])
             frequencyCounter1[val]++;
        else
          frequencyCounter1[val]=1;
   }
   console.log(frequencyCounter1)



   let arr = [5,5,4,3,3,2,2]

   let frequency = {}
   for(let val of arr){
      if(frequency[val]){
      frequency[val]++;
      console.log(val)
      console.log(frequency)
      }else{
      frequency[val]=1;
      console.log(val)
      console.log(frequency)
     }
   }  
   //console.log(frequency)
   var size = Object.keys(frequency).length;
   console.log(size)

   
//question 2 write a function called same , which accepts two arrays , the function should return true if every
//value in the array has it's corresponding value squared in the second array. the frequency of values must be the same.

//example arr = [1,2,3] , arr2 = [4,1,9] // return true
//        arr = [1,2,3],  arr2 = [1,9] // false
    //    arr = [1,2,1] , arr2 = [4,4,1] // false


    let arr1 = [1,2,3]
let arr2 = [4,1,9]
let v 
function same(arr1,arr2){
  if(arr1.length != arr2.length){
    return false;
  }
  
    for(let i = 0; i<arr1.length; i++){
       let correctIndex = arr2.indexOf(arr1[i] ** 2)
       console.log(correctIndex)
       if(correctIndex === -1){
         return false
       }
       let v = arr2.splice(correctIndex,1)
      // console.log(v)
    }
     return true
    
    
}

let result = same(arr1,arr2)
console.log(result)

// second method //O(n)

let arr1 = [1,2,2,3]
let arr2 = [1,4,9,4]

function same(arr1, arr2){
   if(arr1.length != arr2.length){
     return false;
   }
      let frequencyCounter1 = {}
      let frequencyCounter2 = {}
   
    for(let val of arr1){
       frequencyCounter1[val] = (frequencyCounter1[val] || 0)+1
       console.log(frequencyCounter1)
    }
     
     for(let val of arr2){
       frequencyCounter2[val] = (frequencyCounter2[val] || 0)+1
       console.log(frequencyCounter2)
    }
    
    
    for(let key in frequencyCounter1){
       if(!(key **2 in frequencyCounter2)){
          return false
       }
         if(frequencyCounter2[key ** 2] !== frequencyCounter1[key]){
           return false 
         }
    }
    return true
} 


let result = same(arr1,arr2)
console.log(result)

//Question 3 Anagrams anagram yani hellow word se ham word hello bana skte same string ke aplhabets se dusri strign banana
// Given two strings , is an anagram of the first . an anagram is a word . phrase , or name fromed by
// rearranging the letters of another , such as cinema , formed from iceman
// example ValidAnagram(",") // true
// ValidAnagram ("aaz","zza") //false
// ValidAnagram ("rat","cat") // false

// Bruce force method 
let str1 = "hello"
let str2 = "olleh"
  str1 = str1.split("")
  str2 = str2.split("")
 str1 = str1.sort().join()
 str2 = str2.sort().join()
 if(str1 == str2 ){
  console.log(true)
 }

 // second brute force 
 arr1 = [1,2,5,6,7,4]
 arr2 = [5,6,7,4,2,1]
 function Anargram(arr1,arr2){
    arr1 = arr1.sort()
    arr2 = arr2.sort()
     if(arr1.length != arr2.length) return false
     for(let i = 0; i<arr1.length; i++){
        if(arr1[i] != arr2[i])
          return false
     }
      return true 
 }
let re = Anargram(arr1,arr2)
console.log(re)

// third optimise approach

function Anagram(arr1,arr2){
      // create 2 count arrays and initilize
      // all values as 0
      let count1 = new Array(26);
      let count2 = new Array(26);
  
       for(let i = 0; i<NO_OF_CHARS; i++){
          count1[i] = 0;
          count2[i] = 0;
       }


}


let NO_OF_CHARS = 26;
 
function areAnagram(str1, str2)
{   
if (str1.length != str2.length)
        return false;

     let count1 = new Array(NO_OF_CHARS);
    let count2 = new Array(NO_OF_CHARS);
    for(let i = 0; i < NO_OF_CHARS; i++)
    {
        count1[i] = 0;
        count2[i] = 0;
     }
         
    for (let i = 0; i < str1.length && i < str2.length; i++)
    {     
        count1[str1[i].charCodeAt()-"a".charCodeAt()]++;
       // console.log(count1)
        count2[str2[i].charCodeAt()-"a".charCodeAt()]++;
    }
        console.log(count1)
        
        
        count1 = count1.join("")
        count2 = count2.join("")
        if(count1 === count2){
          console.log("this is a anagram")
        }else{
        console.log("not a anagram")
        }
}
// Driver code
let str1 ="vikramsingh"
let str2 ="vikramsingh"
  
// Function call
 areAnagram(str1, str2)






 let str1 = "wworldhello"
 let str2 = "helloworldh"
 let NO_OF_CHARACTER = 26;
 
 let counter1 = new Array(26)
 let counter2 = new Array(26)
 
 for(let i =0; i<counter2.length; i++){
    counter1[i] = 0
    counter2[i] = 0
 }
 
 for(let i = 0; i<str1.length; i++){
    counter1[str1[i].charCodeAt()-"a".charCodeAt()]++;
    counter2[str2[i].charCodeAt()-"a".charCodeAt()]++;
 }
   counter1 = counter1.join("")
   counter2 = counter2.join("")
   
   if(counter1 == counter2){
     console.log("This is an palgram string")
   }else{
     console.log("This is not a palngram string")
   }



























